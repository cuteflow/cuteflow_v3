Role:
  tableName: cf_role
  columns:
    description: { type: string(255) }
  actAs: [SoftDelete]

Credential:
  tableName: cf_credential
  columns:
    user_module: { type: string(255) }
    user_group: { type: string(255) }
    user_right: { type: string(255) }
    user_module_position: { type: integer, length: 3 }
    user_group_position: { type: integer, length: 3 }
  relations:
    Roles: {class: Role, foreignAlias: Credentials, local: credential_id, refClass: CredentialRole}
      
CredentialRole:
   actAs: [SoftDelete]
   tableName: cf_credential_role
   columns:
     role_id: { type: integer, length: 20, primary: true }
     credential_id: { type: integer, length: 20, primary: true }

UserData:
  tableName: cf_user_data
  columns:
    user_id: { type: integer, length: 20, primary: true }
    firstname: { type: string(255) }
    lastname: { type: string(255) }
    street: { type: string(255) }
    zip: { type: string(255) }
    city: { type: string(255) }
    country: { type: string(255) }
    phone1: { type: string(255) }
    phone2: { type: string(255) }
    mobile: { type: string(255) }
    fax: { type: string(255) }
    organisation: { type: string(255) }
    department: { type: string(255) }
    burdencenter: { type: string(255) }
    comment: { type: string(1000) }
    last_action: { type: string(255) }
  relations:
    UserLogin: { class: UserLogin, local: user_id, foreign: id, foreignType: one, type: one }

UserLogin:
  tableName: cf_user_login
  columns:
    role_id: { type: integer, length: 20}
    username: { type: string(255) }
    password: { type: string(255) }
    email: { type: string(255) }
  relations:
    Role: { class: Role, local: role_id, foreign: id, foreignType: many, type: one }
    MailinglistAllowedSender: { class: MailinglistAllowedSender, local: id, foreign: user_id, foreignType: many, type: one }
    MailinglistUser: { class: MailinglistUser, local: id, foreign: user_id, foreignType: many, type: one }
    WorkflowTemplate: { class: WorkflowTemplate, local: id, foreign: sender_id, foreignType: many, type: one }
    WorkflowTemplate: { class: WorkflowTemplate, local: id, foreign: stoped_by, foreignType: many, type: one }
    WorkflowTemplate: { class: WorkflowTemplate, local: id, foreign: archived_by, foreignType: many, type: one }
    WorkflowSlotUser: { class: WorkflowSlotUser, local: id, foreign: user_id, foreignType: many, type: one }
    WorkflowProcessUser: { class: WorkflowProcessUser, local: id, foreign: user_id, foreignType: many, type: one }
  actAs: [SoftDelete]


UserWorkflowConfiguration:
  tableName: cf_user_workflow_configuration
  columns:
    id: { type: integer, length: 20, primary: true, autoincrement: true }
    user_id: { type: integer, length: 20 }
    field_id: {type: integer, length: 20 }
    column_text: { type: string(255)}
    is_active: { type: string(255)}
    position: { type: integer, length: 3}
  relations:
    UserLogin: { class: UserLogin, local: user_id, foreign: id, foreignType: one, type: many}
    Field: { class: Field, local: field_id, foreign: id, foreignType: one, type: many}

UserSetting:
  tableName: cf_user_setting
  columns:
    user_id: { type: integer, length: 20,  primary: true }
    language: { type: string(255) }
    mark_yellow: { type: string(255)}
    mark_red: { type: string(255)}
    mark_orange: { type: string(255)}
    refresh_time: { type: integer, length: 20, default: 180}
    displayed_item: { type: integer, length: 20, default: 25}
    duration_type: { type: string(255) }
    duration_length: { type: string(255) }
    email_format: { type: string(255) }
    email_type: { type: string(255) }
    circulation_default_sort_column: { type: string(255) }
    circulation_default_sort_direction: { type: string(255) }
    theme: { type: string(255) }
    firstlogin: {type: integer, length: 3}
  relations:
    UserLogin: { class: UserLogin, local: user_id, foreign: id, foreignType: one, type: one }

UserAgent:
  tableName: cf_user_agent
  columns:
    user_id: { type: integer, length: 20}
    user_agent_id: { type: integer, length: 20 }
    position: {type: integer, length: 3}
  relations:
    UserData: { class: UserData, local: user_id, foreign: user_id, foreignType: many, type: one }
    UserData: { class: UserData, local: user_agent_id, foreign: user_id, foreignType: many, type: many }

EmailConfiguration:
  tableName: cf_email_configuration
  columns:
    smtp_host: { type: string(255)}
    smtp_useauth: { type: string(255)}
    smtp_port: { type: string(255)}
    smtp_username: { type: string(255)}
    smtp_password: { type: string(255)}
    smtp_encryption: { type: string(255)}
    send_mailpath: { type: string(255)}
    system_reply_address: { type: string(255)}
    allow_email_transport: { type: integer, length: 3}
    active_type: { type: string(255)}

SystemConfiguration:
  tableName: cf_system_configuration
  columns:
    language: { type: string(255), default: en_US}
    show_position_in_mail: { type: integer, length: 3}
    send_receiver_mail: { type: integer, length: 3}
    send_reminder_mail: {type: integer, length: 3}
    visible_slots: { type: string(255) }
    color_of_north_region: { type: string(255) }
    individual_cronjob: {type: integer, length: 3}
    set_user_agent_type: {type: integer, length: 3}
    cronjob_days: {type: integer, length: 3}
    cronjob_from: { type: string(255) }
    cronjob_to: { type: string(255) }

AuthenticationConfiguration:
  tableName: cf_authentication_configuration
  columns:
    authentication_type: { type: string(20)}
    ldap_host: { type: string(255)}
    ldap_domain: { type: string(255)}
    ldap_bind_username_and_context: { type: string(255)}
    ldap_password: { type: string(255)}
    ldap_root_context: { type: string(255)}
    ldap_user_search_attribute: { type: string(255)}
    ldap_firstname: { type: string(255)}
    ldap_host: { type: string(255)}
    ldap_lastname: { type: string(255)}
    ldap_username: { type: string(255)}
    ldap_email: { type: string(255)}
    ldap_office: { type: string(255)}
    ldap_phone: { type: string(255)}
    ldap_context: { type: string(255)}
    ldap_add_user: {type: integer, length: 3}
    openid_server: { type: string(255)}
    first_login: {type: integer, length: 3}
    allow_direct_login: {type: integer, length: 3}


UserConfiguration:
  tableName: cf_user_configuration
  columns:
    role_id: { type: integer, length: 20}
    duration_type: { type: string(255) }
    duration_length: { type: string(255) }
    displayed_item: { type: string(255) }
    refresh_time: { type: string(255) }
    mark_yellow: { type: string(255) }
    mark_red: { type: string(255) }
    mark_orange: { type: string(255) }
    password: { type: string(255) }
    language: { type: string(255) }
    email_format: { type: string(255) }
    email_type: { type: string(255) }
    theme: { type: string(255) }
    circulation_default_sort_column: { type: string(255) }
    circulation_default_sort_direction: { type: string(255) }
  relations:
    Role: { class: Role, local: role_id, foreign: id, foreignType: many, type: one }

WorkflowConfiguration:
  tableName: cf_workflow_configuration
  columns:
    column_text: { type: string(255)}
    is_active: { type: string(255)}
    position: { type: integer, length: 3}

AuthorizationConfiguration:
  tableName: cf_authorization_configuration
  columns:
    type: { type: string(255)}
    delete_workflow: { type: integer, length: 3}
    archive_workflow: { type: integer, length: 3}
    stop_new_orkflow: { type: integer, length: 3}
    details_workflow: { type: integer, length: 3}


AdditionalText:
  tableName: cf_additional_text
  columns:
    title: { type: string(255)}
    content: { type: string(5000)}
    content_type: { type: string(255)}
    is_active: { type: integer, length: 3 }
  relations:
    WorkflowVersion: { class: WorkflowVersion, local: id, foreign: additional_text_id, foreignType: many, type: one }
  actAs: [SoftDelete]


Field:
  actAs: [SoftDelete]
  tableName: cf_field
  columns:
    title: { type: string(255)}
    type: { type: string(255)}
    write_protected: { type: integer, length: 3 }
    color: { type: string(255)}
  relations:
    DocumenttemplateField: { class: DocumenttemplateField, local: id, foreign: field_id, foreignType: many, type: one }
    WorkflowSlotField: { class: WorkflowSlotField, local: id, foreign: field_id, foreignType: many, type: one }


FieldTextfield:
  tableName: cf_field_textfield
  columns:
    field_id: { type: integer, length: 20 }
    regex: {type: string(255) }
    default_value: {type: string(255) }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }

FieldCheckbox:
  tableName: cf_field_checkbox
  columns:
    field_id: { type: integer, length: 20 }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }

FieldNumber:
  tableName: cf_field_number
  columns:
    field_id: { type: integer, length: 20 }
    regex: {type: string(255) }
    default_value: {type: string(255) }
    combobox_value: {type: string(255) }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }

FieldDate:
  tableName: cf_field_date
  columns:
    field_id: { type: integer, length: 20 }
    regex: {type: string(255) }
    default_value: {type: string(255) }
    date_format: {type: string(255) }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }

FieldFile:
  tableName: cf_field_file
  columns:
    field_id: { type: integer, length: 20 }
    regex: {type: string(255) }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }

FieldCombobox:
  tableName: cf_field_combobox
  columns:
    id: { type: integer, length: 20, primary: true, autoincrement: true }
    field_id: { type: integer, length: 20 }
    value: {type: string(255) }
    is_active: { type: integer, length: 3 }
    position: { type: integer, length: 3 }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }
    WorkflowSlotFieldCombobox: { class: WorkflowSlotFieldCombobox, local: id, foreign: field_combobox_id, foreignType: many, type: one }

FieldCheckboxgroup:
  tableName: cf_field_checkbox_group
  columns:
    field_id: { type: integer, length: 20 }
    value: {type: string(255) }
    is_active: { type: integer, length: 3 }
    position: { type: integer, length: 3 }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }
    WorkflowSlotFieldCheckboxgroup: { class: WorkflowSlotFieldCheckboxgroup, local: id, foreign: field_checkbox_group_id, foreignType: many, type: one }

FieldRadiogroup:
  tableName: cf_field_radio_group
  columns:
    field_id: { type: integer, length: 20 }
    value: {type: string(255) }
    is_active: { type: integer, length: 3 }
    position: { type: integer, length: 3 }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }
    WorkflowSlotFieldRadiogroup: { class: WorkflowSlotFieldRadiogroup, local: id, foreign: field_radiogroup_id, foreignType: many, type: one }


FieldTextarea:
  tableName: cf_field_textarea
  columns:
    field_id: { type: integer, length: 20 }
    content_type: {type: string(255) }
    content: {type: string(5000) }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }



DocumentTemplate:
  tableName: cf_document_template
  columns:
    name: { type: string(255) }
  relations:
    DocumentTemplateVersion: { class: DocumentTemplateVersion, local: id, foreign: document_template_id, foreignType: many, type: one }
    MailinglistTemplate: { class: MailinglistTemplate, local: id, foreign: document_template_id, foreignType: many, type: one }
  actAs: [SoftDelete, Timestampable]

DocumentTemplateVersion:
  tableName: cf_document_template_version
  columns:
    document_template_id: { type: integer, length: 20 }
    version: { type: integer, length: 3 }
    active_version: { type: integer, length: 3 }
  relations:
    DocumentTemplateSlot: { class: DocumentTemplateSlot, local: id, foreign: document_template_version_id, foreignType: many, type: one }
    MailinglistVersion: { class: MailinglistVersion, local: id, foreign: document_template_version_id, foreignType: many, type: one }
    WorkflowTemplate: { class: WorkflowTemplate, local: id, foreign: document_template_version_id, foreignType: many, type: one }
  actAs: [Timestampable]

DocumentTemplateSlot:
  tableName: cf_document_template_slot
  columns:
    document_template_version_id: { type: integer, length: 20 }
    name: { type: string(255) }
    send_to_all_receivers: { type: integer, length: 3 }
    position: { type: integer, length: 3 }
  relations:
    DocumenttemplateField: { class: DocumentTemplateField, local: id, foreign: document_template_slot_id, foreignType: many, type: one }
    MailinglistSlot: { class: MailinglistSlot, local: id, foreign: slot_id, foreignType: many, type: one }
    WorkflowSlot: { class: WorkflowSlot, local: id, foreign: slot_id, foreignType: many, type: one }

DocumenttemplateField:
  tableName: cf_document_template_field
  columns:
    document_template_slot_id: { type: integer, length: 20 }
    field_id: { type: integer, length: 20 }
    position: { type: integer, length: 3 }


MailinglistTemplate:
   tableName: cf_mailinglist_template
   columns:
     document_template_id : { type: integer, length: 20}
     name: {type: string(255) }
     is_active: { type: string(255)}
   relations:
     MailinglistVersion: { class: MailinglistVersion, local: id, foreign: mailinglist_template_id, foreignType: many, type: one }
     WorkflowTemplate: { class: WorkflowTemplate, local: id, foreign: mailinglist_template_id, foreignType: many, type: one }
   actAs: [SoftDelete,Timestampable]

MailinglistVersion:
  actAs: [Timestampable]
  tableName: cf_mailinglist_version
  columns:
    mailinglist_template_id: { type: integer, length: 20 }
    document_template_version_id: { type: integer, length: 20 }
    send_to_all_slots_at_once: { type: integer, length: 3 }
    version: { type: integer, length: 3 }
    active_version: { type: integer, length: 3 }
  relations:
    MailinglistAuthorizationSetting: { class: MailinglistAuthorizationSetting, local: id, foreign: mailinglist_version_id, foreignType: many, type: one }
    MailinglistAllowedSender: { class: MailinglistAllowedSender, local: id, foreign: mailinglist_version_id, foreignType: many, type: one }
    WorkflowTemplate: { class: WorkflowTemplate, local: id, foreign: mailinglist_template_version_id, foreignType: many, type: one }
    
MailinglistAuthorizationSetting:
  tableName: cf_mailinglist_authorization_setting
  columns:
    mailinglist_version_id: { type: integer, length: 20 }
    type: { type: string(255)}
    delete_workflow: { type: integer, length: 3}
    archive_workflow: { type: integer, length: 3}
    stop_new_workflow: { type: integer, length: 3}
    details_workflow: { type: integer, length: 3}

MailinglistAllowedSender:
  tableName: cf_mailinglist_allowed_sender
  columns:
    mailinglist_version_id: { type: integer, length: 20 }
    user_id: { type: integer, length: 20 }
    position: { type: integer, length: 3 }

MailinglistSlot:
  tableName: cf_mailinglist_slot
  columns:
    mailinglist_version_id: { type: integer, length: 20 }
    slot_id: { type: integer, length: 20 }
    position: { type: integer, length: 3 }
  relations:
    MailinglistUser: { class: MailinglistUser, local: id, foreign: mailinglist_slot_id, foreignType: many, type: one }

MailinglistUser:
  tableName: cf_mailinglist_user
  columns:
    mailinglist_slot_id: { type: integer, length: 20 }
    user_id: { type: integer, length: 20 }
    position: { type: integer, length: 3 }

WorkflowTemplate:
  tableName: cf_workflow_template
  columns:
    mailinglist_template_version_id: { type: integer, length: 20 }
    document_template_version_id: { type: integer, length: 20 }
    sender_id: { type: integer, length: 20 }
    name: {type: string(255) }
    is_stopped: { type: integer, length: 3 }
    stopped_at: {type: string(255) }
    stopped_by: { type: integer, length: 20 }
    completed_at: {type: string(255) }
    is_completed: { type: integer, length: 3 }
    is_archived: { type: integer, length: 3 }
    archived_at: {type: string(255) }
    archived_by: { type: integer, length: 20 }
    end_action: { type: integer, length: 3 }
  relations:
    WorkflowVersion: { class: WorkflowVersion, local: id, foreign: workflow_template_id, foreignType: many, type: one }
    WorkflowProcess: { class: WorkflowProcess, local: id, foreign: workflow_template_id, foreignType: many, type: one }
    WorkflowVersionAttachment: { class: WorkflowVersionAttachment, local: id, foreign: workflow_template_id, foreignType: many, type: one }
  actAs: [SoftDelete, Timestampable]

WorkflowVersion:
  tableName: cf_workflow_version
  columns:
    workflow_template_id: { type: integer, length: 20 }
    additional_text_id: { type: integer, length: 20 }
    active_version: { type: integer, length: 3 }
    version: { type: integer, length: 3 }
    end_reason: {type: string(1000) }
    content: {type: string(5000) }
    content_type: {type: string(255) }
    start_workflow_at: {type: string(255) }
    workflow_is_started: { type: integer, length: 3 }
  relations:
    WorkflowSlot: { class: WorkflowSlot, local: id, foreign: workflow_version_id, foreignType: many, type: one }
    WorkflowProcess: { class: WorkflowProcess, local: id, foreign: workflow_version_id, foreignType: many, type: one }
    WorkflowVersionAttachment: { class: WorkflowVersionAttachment, local: id, foreign: workflow_version_id, foreignType: many, type: one }
  actAs: [Timestampable]

WorkflowVersionAttachment:
  tableName: cf_workflow_version_attachment
  columns:
    workflow_template_id: { type: integer, length: 20 }
    workflow_version_id: { type: integer, length: 20 }
    workflow_template_id: { type: integer, length: 20 }
    filename: {type: string(255) }
    hashname: {type: string(255) }
  actAs: [Timestampable]
 
WorkflowSlot:
  tableName: cf_workflow_slot
  columns:
    workflow_version_id: { type: integer, length: 20 }
    slot_id: { type: integer, length: 20 }
    position: { type: integer, length: 3 }
  relations:
    WorkflowSlotUser: { class: WorkflowSlotUser, local: id, foreign: workflow_slot_id, foreignType: many, type: one }
    WorkflowSlotField: { class: WorkflowSlotField, local: id, foreign: workflow_slot_id, foreignType: many, type: one }
    WorkflowProcess: { class: WorkflowProcess, local: id, foreign: workflow_slot_id, foreignType: many, type: one }
  actAs: [Timestampable]

WorkflowSlotUser:
  tableName: cf_workflow_slot_user
  columns:
    workflow_slot_id: { type: integer, length: 20 }
    user_id: { type: integer, length: 20 }
    position: { type: integer, length: 3 }
  relations:
    WorkflowProcessUser: { class: WorkflowProcessUser, local: id, foreign: workflow_slot_user_id, foreignType: many, type: one }


WorkflowSlotField:
  tableName: cf_workflow_slot_field
  columns:
    workflow_slot_id: { type: integer, length: 20 }
    field_id: { type: integer, length: 20 }
    position: { type: integer, length: 3 }
  relations:
    WorkflowSlotFieldTextfield: { class: WorkflowSlotFieldTextfield, local: id, foreign: workflow_slot_field_id, foreignType: many, type: one }
    WorkflowSlotFieldCheckbox: { class: WorkflowSlotFieldCheckbox, local: id, foreign: workflow_slot_field_id, foreignType: many, type: one }
    WorkflowSlotFieldNumber: { class: WorkflowSlotFieldNumber, local: id, foreign: workflow_slot_field_id, foreignType: many, type: one }
    WorkflowSlotFieldDate: { class: WorkflowSlotFieldDate, local: id, foreign: workflow_slot_field_id, foreignType: many, type: one }
    WorkflowSlotFieldTextarea: { class: WorkflowSlotFieldTextarea, local: id, foreign: workflow_slot_field_id, foreignType: many, type: one }
    WorkflowSlotFieldRadiogroup: { class: WorkflowSlotFieldRadiogroup, local: id, foreign: workflow_slot_field_id, foreignType: many, type: one }
    WorkflowSlotFieldCombobox: { class: WorkflowSlotFieldCombobox, local: id, foreign: workflow_slot_field_id, foreignType: many, type: one }
    WorkflowSlotFieldCheckboxgroup: { class: WorkflowSlotFieldCheckboxgroup, local: id, foreign: workflow_slot_field_id, foreignType: many, type: one }
    WorkflowSlotFieldFile: { class: WorkflowSlotFieldFile, local: id, foreign: workflow_slot_field_id, foreignType: many, type: one }



WorkflowSlotFieldTextfield:
  tableName: cf_workflow_slot_textfield
  columns:
    workflow_slot_field_id: { type: integer, length: 20 }
    value: {type: string(1000) }

WorkflowSlotFieldCheckbox:
  tableName: cf_workflow_slot_checkbox
  columns:
    workflow_slot_field_id: { type: integer, length: 20 }
    value: { type: integer, length: 3 }


WorkflowSlotFieldNumber:
  tableName: cf_workflow_slot_number
  columns:
    workflow_slot_field_id: { type: integer, length: 20 }
    value: {type: string(1023) }


WorkflowSlotFieldDate:
  tableName: cf_workflow_slot_date
  columns:
    workflow_slot_field_id: { type: integer, length: 20 }
    value: {type: string(255) }


WorkflowSlotFieldTextarea:
  tableName: cf_workflow_slot_textarea
  columns:
    workflow_slot_field_id: { type: integer, length: 20 }
    value: {type: string(5000) }

WorkflowSlotFieldRadiogroup:
  tableName: cf_workflow_slot_radiogroup
  columns:
    workflow_slot_field_id: { type: integer, length: 20 }
    field_radiogroup_id: { type: integer, length: 20 }
    value: { type: integer, length: 20 }
    position: { type: integer, length: 3 }


WorkflowSlotFieldCombobox:
  tableName: cf_workflow_slot_combobox
  columns:
    workflow_slot_field_id: { type: integer, length: 20 }
    field_combobox_id: { type: integer, length: 20 }
    value: { type: integer, length: 20 }
    position: { type: integer, length: 3 }


WorkflowSlotFieldCheckboxgroup:
  tableName: cf_workflow_slot_checkbox_group
  columns:
    workflow_slot_field_id: { type: integer, length: 20 }
    field_checkbox_group_id: { type: integer, length: 20 }
    value: { type: integer, length: 20 }
    position: { type: integer, length: 3 }


WorkflowSlotFieldFile:
  tableName: cf_workflow_slot_file
  columns:
    workflow_slot_field_id: { type: integer, length: 20 }
    filename: {type: string(255) }
    hashname: {type: string(255) }

WorkflowProcess:
  tableName: cf_workflow_process
  columns:
    workflow_template_id: { type: integer, length: 20 }
    workflow_version_id: { type: integer, length: 20 }
    workflow_slot_id: { type: integer, length: 20 }
  relations:
    WorkflowProcessUser: { class: WorkflowProcessUser, local: id, foreign: workflow_process_id, foreignType: many, type: one }


WorkflowProcessUser:
  tableName: cf_workflow_process_user
  columns:
    workflow_process_id: { type: integer, length: 20 }
    workflow_slot_user_id: { type: integer, length: 20 }
    user_id: { type: integer, length: 20 }
    in_progress_since: {type: string(255) }
    decission_state: {type: string(255) }
    date_of_decission: {type: string(255) }
    is_user_agent_of: { type: integer, length: 20 }
    user_agent_set_by_cronjob: { type: integer, length: 3, default: 0 }
    resendet: { type: integer, length: 20 }
  relations:
    WorkflowProcessUser: { class: WorkflowProcessUser, local: id, foreign: is_user_agent_of, foreignType: one, type: one }
  actAs: [Timestampable]

Filter:
  tableName: cf_filter
  columns:
    filter_name: {type: string(255) }
    name: {type: string(255) }
    sender_id: { type: integer, length: 20 }
    days_from: {type: string(255) }
    days_to: {type: string(255) }
    sendet_from: {type: string(255) }
    sendet_to: {type: string(255) }
    workflow_process_user_id: { type: integer, length: 20 }
    mailinglist_version_id: { type: integer, length: 20 }
    document_template_version_id: { type: integer, length: 20 }
  relations:
    FilterField: { class: FilterField, local: id, foreign: filter_id, foreignType: many, type: one }
    UserLogin: { class: UserLogin, local: sender_id, foreign: id, foreignType: one, type: many }
    WorkflowProcessUser: { class: WorkflowProcessUser, local: workflow_process_user_id, foreign: id, foreignType: one, type: many }
    MailinglistVersion: { class: MailinglistVersion, local: mailinglist_version_id, foreign: id, foreignType: one, type: many }
    DocumentTemplateVersion: { class: DocumentTemplateVersion, local: document_template_version_id, foreign: id, foreignType: one, type: many }

FilterField:
  tableName: cf_filter_field
  columns:
    filter_id:  { type: integer, length: 20 }
    field_id:  { type: integer, length: 20 }
    operator: {type: string(255) }
    value: {type: string(255) }
  relations:
    Filter: { class: Filter, local: filter_id, foreign: id, foreignType: one, type: many }
    Field: { class: Field, local: field_id, foreign: id, foreignType: one, type: many }