<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class UserSettingTable extends Doctrine_Table
{

    /**
     * create new instance of usersettingtable
     * @return object usersettingtable
     */
    public static function getInstance()
    {
        return Doctrine::getTable('UserSetting');
    }


    /**
     * Get usersettings by id
     * @param int $id, id of user
     * @return Doctrine_Collection
     */
    public function getUserSettingById($id)
    {
        return Doctrine_Query::create()
                        ->select('us.*')
                        ->from('UserSetting us')
                        ->where('us.user_id = ?', $id)
                        ->execute();
    }


    /**
     * Update Emailformat and Emailtype of an user
     * @param array $data post data
     * @param int $id, user_id
     * @return true
     */
    public function updateUserEmailFormatAndEmailType($data, $user_id)
    {
        Doctrine_Query::create()
                ->update('UserSetting us')
                ->set('us.email_format', '?', $data['userFirstTab_emailformat'])
                ->set('us.email_type', '?', $data['userFirstTab_emailtype'])
                ->set('us.language', '?', $data['userFirstTab_language'])
                ->where('us.user_id = ?', $user_id)
                ->execute();
        return true;
    }


    /**
     * Function updates user settings
     * @param array $data, POST data
     * @param int $user_id, user_id
     * @return true
     */
    public function updateUserSetting($data, $user_id)
    {
        try {
            Doctrine_Query::create()
                    ->update('UserSetting us')
                    ->set('us.mark_yellow', '?', $data['userFourthTab_markyellow'])
                    ->set('us.mark_red', '?', $data['userFourthTab_markred'])
                    ->set('us.mark_orange', '?', $data['userFourthTab_markorange'])
                    ->set('us.refresh_time', '?', $data['userFourthTab_refreshtime'])
                    ->set('us.displayed_item', '?', $data['userFourthTab_itemsperpage'])
                    ->set('us.circulation_default_sort_column', '?', $data['userFourthTab_circulationdefaultsortcolumn'])
                    ->set('us.circulation_default_sort_direction', '?', $data['userFourthTab_circulationdefaultsortdirection'])
                    ->set('us.theme', '?', $data['userFourthTab_theme'])
                    ->where('us.user_id = ?', $user_id)
                    ->execute();
        } catch (Exception $e) {
            
        }
        return true;
    }


    /**
     * Function updates Durationtype and DurationLength
     * @param array $data, POST data
     * @param int $user_id, user_id
     * @return true
     */
    public function updateUserSettingDurationTypeAndDurationLength($data, $user_id)
    {

        if ($data['userSecondTab_durationlength_type'] && $data['userSecondTab_durationlength']) {
            $userSetting = UserSettingTable::getInstance()->findOneByUserId($user_id);
            if (!$userSetting) {
                $userSetting = new UserSetting();
                $userSetting->setUserId($user_id);
            }
            $userSetting->setDurationType($data['userSecondTab_durationlength_type']);
            $userSetting->setDurationLength($data['userSecondTab_durationlength']);
            $userSetting->save();
        }
        return true;
    }


    /**
     * Function sets firstlogin flag to 0, -> user is logged in.
     * @param id $user_id, user_id
     * @return true
     */
    public function setFirstLogin($user_id)
    {
        Doctrine_Query::create()
                ->update('UserSetting us')
                ->set('us.first_login', '?', 0)
                ->where('us.user_id = ?', $user_id)
                ->execute();
        return true;
    }


    /**
     * Load firstlogin flag
     * @param int $user_id, user_id
     * @return Doctrine_Collection
     */
    public function getFirstLogin($user_id)
    {
        return Doctrine_Query::create()
                        ->select('us.firstlogin')
                        ->from('UserSetting us')
                        ->where('us.user_id = ?', $user_id)
                        ->execute();
    }


}