<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class MailinglistVersionTable extends Doctrine_Table {


        /**
     * create new instance of MailinglistAuthorizationSetting
     * @return object MailinglistAuthorizationSetting
     */
    public static function instance() {
        return Doctrine::getTable('MailinglistVersion');
    }


    /**
     * Get the current used Version by Id
     *
     * @param int $id, id of the tempplate
     * @return Doctrine_Collection
     */
    public function getVersionById($id) {
        return Doctrine_Query::create()
                    ->select('mlv.*')
                    ->from('MailinglistVersion mlv')
                    ->where('mlv.mailinglist_template_id = ?', $id)
                    ->orderBy('mlv.version DESC')
                    ->execute();
    }

    /**
     * Sets all records inactive for an exisiting template
     *
     * @param int $id, id of the template
     * @return true
     */
    public function setMailinglistInactiveById($id) {
        Doctrine_Query::create()
            ->update('MailinglistVersion mlv')
            ->set('mlv.active_version','?', 0)
            ->where('mlv.mailinglist_template_id = ?', $id)
            ->execute();
        return true;
    }

    /**
     * Get the active Version of an template
     *
     * @param int $id, id of template
     * @return Doctrine_Collection
     */
    public function getActiveVersionById($id) {
        return Doctrine_Query::create()
            ->from('MailinglistVersion mlv')
            ->where('mlv.mailinglist_template_id = ?', $id)
            ->andWhere('mlv.active_version = ?', 1)
            ->execute();

    }

    /**
     * Load an Version, by its id
     * @param int $id
     * @return Doctrine_Collection
     */
    public function getSingleVersionById($id) {
        return Doctrine_Query::create()
            ->from('MailinglistVersion mlv')
            ->where('mlv.id = ?', $id)
            ->execute();
    }

    /**
     * Get all version for a template
     *
     * @param int $id, template id
     * @return Doctrine_Collection
     */
    public function getAllVersionsById($id) {
        return Doctrine_Query::create()
            ->from('MailinglistVersion mlv')
            ->where('mlv.mailinglist_template_id = ?', $id)
            ->orderBy('mlv.created_at DESC')
            ->execute();

    }

    public function setMailinglistActiveById($id) {
        Doctrine_Query::create()
            ->update('MailinglistVersion mlv')
            ->set('mlv.active_version','?', 1)
            ->where('mlv.id = ?', $id)
            ->execute();
        return true;

    }

    
}